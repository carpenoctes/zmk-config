/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* Uncomment this block if using RGB
&led_strip {
    chain-length = <6>;
    // chain-length = <31>; // Uncomment if using both per-key and underglow LEDs
    // chain-length = <25>; // Uncomment if using only per-key LEDs.
};
 */

#define DEFAULT 0
#define NUMBERS 1
#define CODING  2
#define NAVI    3

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    flavor = "balanced";
    tapping-term-ms = <500>;
};

/ {
    behaviors {
        lbh: lbh {
            compatible = "zmk,behavior-hold-tap";
            label = "LBH";
            bindings = <&mo>, <&to>;

            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <500>;
        };

        hlt: hlt {
            compatible = "zmk,behavior-hold-tap";
            label = "HLT";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <500>;
        };

        commaQ: commaQ {
            compatible = "zmk,behavior-tap-dance";
            label = "COMMAQ";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp LS(MINUS)>;
        };

        dot2Exc: dot2Exc {
            compatible = "zmk,behavior-tap-dance";
            label = "DOT2EXC";
            #binding-cells = <0>;
            bindings = <&hlt 2 DOT>, <&kp EXCL>;
        };
        //single and double quotes
        sdquotes: sdquotes {
            compatible = "zmk,behavior-tap-dance";
            label = "SDQUOTES";
            #binding-cells = <0>;
            bindings = <&kp BSLH>, <&kp LS(N2)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        DEFAULT {
            bindings = <
&kp C_MUTE        &kp H  &kp P  &kp B     &kp G      &kp D                                                                   &kp SEMI       &kp SQT       &kp U      &kp M  &kp J  &kp PRINTSCREEN
&mt LCTRL ESCAPE  &kp L  &kp N  &kp T     &hlt 1 S   &hlt 2 F                                                                &dot2Exc       &hlt 1 A      &kp E      &kp R  &kp I  &kp Y
&mt LALT TAB      &kp Z  &kp V  &kp K     &kp C      &kp X                   &lbh 0 0         &lbh 1 1  &lbh 2 2  &lbh 3 3   &commaQ        &kp O         &kp LBKT   &kp W  &kp Q  &kp BSLH
                                &kp LEFT  &kp LCTRL  &mt LEFT_ALT LG(GRAVE)  &mt LSHIFT CAPS  &kp LGUI  &kp RET   &kp SPACE  &kp BACKSPACE  &mt RALT DEL  &kp RIGHT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        NUMBERS {
            bindings = <
&trans      &kp N1      &kp N2      &kp N3      &kp N4      &kp N5                                      &kp N6      &kp N7  &kp N8  &kp N9  &kp N0           &trans
&kp LG(F6)  &kp LG(F1)  &kp LG(F2)  &kp LG(F3)  &kp LG(F4)  &kp LG(F5)                                  &kp LS(N0)  &kp N4  &kp N5  &kp N6  &kp MINUS        &kp SLASH
&kp LG(N6)  &kp LG(N1)  &kp LG(N2)  &kp LG(N3)  &kp LG(N4)  &kp LG(N5)  &trans  &trans  &trans  &trans  &kp N0      &kp N1  &kp N2  &kp N3  &kp KP_MULTIPLY  &kp KP_DIVIDE
                                    &trans      &trans      &trans      &trans  &trans  &trans  &trans  &trans      &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        CODING {
            bindings = <
&trans  &kp HASH      &kp RA(E)      &kp RA(NUMBER_3)  &kp RA(N4)     &kp PERCENT                                               &kp LS(NUMBER_6)          &kp LS(NUMBER_2)  &kp BSLH    &kp LS(FSLH)  &kp LS(N0)       &trans
&trans  &kp RBKT      &kp LS(MINUS)  &kp EXCL          &kp RA(N2)     &kp LS(DOT)                                               &kp NON_US_BACKSLASH      &kp LS(N8)        &kp RA(N7)  &kp RA(N8)    &kp MINUS        &kp FSLH
&trans  &kp RA(RBKT)  &kp LS(N4)     &kp LS(N7)        &kp RA(MINUS)  &kp RA(NON_US_BACKSLASH)  &trans  &trans  &trans  &trans  &kp LS(NON_US_BACKSLASH)  &kp LS(N9)        &kp RA(N0)  &kp RA(N9)    &kp KP_MULTIPLY  &kp KP_DIVIDE
                                     &trans            &trans         &trans                    &trans  &trans  &trans  &trans  &trans                    &trans            &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        NAVI {
            bindings = <
&trans       &kp F1  &kp F2   &kp F3   &kp F4   &bt BT_CLR                                  &kp C_PREV  &kp C_PP  &kp C_NEXT    &kp C_BRI_INC  &kp C_BRI_DEC  &trans
&sys_reset   &kp F5  &kp F6   &kp F7   &kp F8   &none                                       &kp HOME    &kp LEFT  &kp UP        &kp RIGHT      &kp END        &sys_reset
&bootloader  &kp F9  &kp F10  &kp F11  &kp F12  &none       &trans  &trans  &trans  &trans  &kp INS     &kp LEFT  &kp DOWN      &kp RIGHT      &kp END        &bootloader
                              &trans   &trans   &trans      &trans  &trans  &trans  &trans  &trans      &trans    &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
    };
};
