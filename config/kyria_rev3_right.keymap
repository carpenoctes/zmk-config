/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* Uncomment this block if using RGB
&led_strip {
    chain-length = <6>;
    // chain-length = <31>; // Uncomment if using both per-key and underglow LEDs
    // chain-length = <25>; // Uncomment if using only per-key LEDs.
};
 */
&kscan0 {
    row-gpios
    = <&pro_micro 19 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
    , <&pro_micro 18 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
    , <&pro_micro 15 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
    , <&pro_micro 14 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
    ;
    col-gpios
    = <&pro_micro 16 GPIO_ACTIVE_HIGH>
    , <&pro_micro 4  GPIO_ACTIVE_HIGH>
    , <&pro_micro 5  GPIO_ACTIVE_HIGH>
    , <&gpio1 7 GPIO_ACTIVE_HIGH>
    , <&pro_micro 7  GPIO_ACTIVE_HIGH>
    , <&pro_micro 8  GPIO_ACTIVE_HIGH>
    , <&pro_micro 10 GPIO_ACTIVE_HIGH>
    ;
};
nice_view_spi: &spi0 {
    compatible = "nordic,nrf-spim";
    pinctrl-0 = <&spi0_default>;
    pinctrl-1 = <&spi0_sleep>;
    pinctrl-names = "default", "sleep";
    cs-gpios = <&gpio1 1 GPIO_ACTIVE_HIGH>;
};

#define DEFAULT 0
#define NUMBERS 1
#define CODING  2
#define NAVI    3
#define MEDIA   4

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        lbh: lbh {
            compatible = "zmk,behavior-hold-tap";
            label = "LBH";
            bindings = <&mo>, <&to>;

            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        DEFAULT {
/*    bindings = <
&kp C_MUTE        &kp K  &kp M  &kp D          &kp F      &kp B                                                         &kp COMMA      &kp SQT   &kp I     &kp L  &kp Y     &kp PRINTSCREEN
&mt LCTRL ESCAPE  &kp G  &kp T  &kp S          &kp N      &kp P                                                         &kp SEMI       &kp A     &kp E     &kp R  &kp LBKT  &kp W
&mt LALT TAB      &kp X  &kp V  &kp C          &kp H      &kp Z         &lbh 0 0         &lbh 1 1  &lbh 2 2  &lbh 3 3   &kp DOT        &kp O     &kp U     &kp J  &kp Q     &kp BSLH
                                &kp LG(GRAVE)  &kp LCTRL  &kp LEFT_ALT  &mt LSHIFT CAPS  &kp LGUI  &kp RET   &kp SPACE  &kp BACKSPACE  &lbh 4 4  &kp RALT
            >;
j l o i u  f c d h k 
m r a e y  v s t n g 
z x å ä ö  . , p b ' 
*/
bindings = <
&kp C_MUTE        &kp J  &kp L  &kp O          &kp I      &kp U                                                            &kp F          &kp C        &kp D     &kp H  &kp K     &kp PRINTSCREEN
&mt LCTRL ESCAPE  &kp M  &kp R  &kp A          &kp E      &kp Y                                                            &kp V          &kp S        &kp T     &kp N  &kp G     &kp W
&mt LALT TAB      &kp Z  &kp X  &kp LBKT       &kp SQT    &kp SEMI         &lbh 0 0         &lbh 1 1  &lbh 2 2  &lbh 3 3   &kp DOT        &kp COMMA    &kp P     &kp B  &kp Q     &kp BSLH
                                &kp LG(GRAVE)  &kp LCTRL  &kp LEFT_ALT     &mt LSHIFT CAPS  &kp LGUI  &kp RET   &kp SPACE  &kp BACKSPACE  &lbh 4 4     &kp RALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        NUMBERS {
            bindings = <
&trans      &kp N1      &kp N2      &kp N3      &kp N4      &kp N5                                      &kp N6     &kp N7  &kp N8  &kp N9  &kp N0           &trans
&kp LG(F6)  &kp LG(F1)  &kp LG(F2)  &kp LG(F3)  &kp LG(F4)  &kp LG(F5)                                  &kp EQUAL  &kp N4  &kp N5  &kp N6  &kp MINUS        &kp SLASH
&kp LG(N6)  &kp LG(N1)  &kp LG(N2)  &kp LG(N3)  &kp LG(N4)  &kp LG(N5)  &trans  &trans  &trans  &trans  &kp N0     &kp N1  &kp N2  &kp N3  &kp KP_MULTIPLY  &kp KP_DIVIDE
                                    &trans      &trans      &trans      &trans  &trans  &trans  &trans  &trans     &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        CODING {
            bindings = <
&trans  &kp HASH      &kp RA(E)      &kp RA(NUMBER_3)  &kp RA(N4)     &kp PERCENT                                               &kp LS(NUMBER_6)          &kp LS(NUMBER_2)  &kp BSLH    &kp LS(FSLH)  &kp LS(N0)       &trans
&trans  &kp RBKT      &kp LS(MINUS)  &kp EXCL          &kp RA(N2)     &kp LS(DOT)                                               &kp NON_US_BACKSLASH      &kp LS(N8)        &kp RA(N7)  &kp RA(N8)    &kp MINUS        &kp FSLH
&trans  &kp RA(RBKT)  &kp LS(N4)     &kp LS(N7)        &kp RA(MINUS)  &kp RA(NON_US_BACKSLASH)  &trans  &trans  &trans  &trans  &kp LS(NON_US_BACKSLASH)  &kp LS(N9)        &kp RA(N0)  &kp RA(N9)    &kp KP_MULTIPLY  &kp KP_DIVIDE
                                     &trans            &trans         &trans                    &trans  &trans  &trans  &trans  &trans                    &trans            &trans
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp PG_UP PG_DN>;
        };

        NAVI {
            bindings = <
&trans  &none          &none         &none          &none           &none                                           &none       &none     &none     &none     &none        &trans
&trans  &kp C_AC_UNDO  &kp C_AC_CUT  &kp C_AC_COPY  &kp C_AC_PASTE  &kp C_AC_REPLY                                  &kp INSERT  &none     &none     &kp UP    &kp RIGHT    &kp END
&trans  &kp C_AC_REDO  &kp C_AC_CUT  &kp C_AC_COPY  &kp C_AC_PASTE  &kp C_AC_SEND   &trans  &trans  &trans  &trans  &kp DELETE  &kp HOME  &kp LEFT  &kp DOWN  &kp PAGE_UP  &kp PAGE_DOWN
                                     &trans         &trans          &trans          &trans  &trans  &trans  &trans  &trans      &trans    &trans
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp PG_UP PG_DN>;
        };

        MEDIA {
            bindings = <
&trans       &bt BT_CLR    &kp C_BRIGHTNESS_AUTO  &kp C_AC_REFRESH  &kp C_PLAY_PAUSE  &kp C_MUTE                                    &kp F1  &kp F2   &kp F3   &kp F4   &kp C_AL_LOCK  &trans
&sys_reset   &bt BT_SEL 0  &kp C_BRI_UP           &kp C_AC_FORWARD  &kp C_NEXT        &kp C_VOL_UP                                  &kp F5  &kp F6   &kp F7   &kp F8   &kp C_SLEEP    &sys_reset
&bootloader  &bt BT_SEL 1  &kp C_BRI_DN           &kp C_AC_BACK     &kp C_PREV        &kp C_VOL_DN  &trans  &trans  &trans  &trans  &kp F9  &kp F10  &kp F11  &kp F12  &kp C_PWR      &bootloader
                                                  &trans            &trans            &trans        &trans  &trans  &trans  &trans  &trans  &trans   &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
    };
};
